BEGIN;
-- faire place nette avant de créer les tables


CREATE TABLE "alimentaire" (
    "id" int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    "article" text NOT NULL,
    "quantité" int NOT NULL DEFAULT 0,
    "catégorie" text,
    "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  --on peut utiliser now() aussi
    "updated_at" timestamptz
   
);
CREATE TABLE "baby" (
    "id" int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    "article" text NOT NULL,
    "quantité" int NOT NULL DEFAULT 0,
    "catégorie" text,
    "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  --on peut utiliser now() aussi
    "updated_at" timestamptz
   
);


CREATE TABLE "entretien" (
    "id" int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    "article" text NOT NULL,
    "quantité" int NOT NULL DEFAULT 0,
    "catégorie" text,
    "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  --on peut utiliser now() aussi
    "updated_at" timestamptz
   
);

CREATE TABLE "hygiène" (
    id int GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    "article" text NOT NULL,
    "quantité" int NOT NULL DEFAULT 0,
    "catégorie" text,
    "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  --on peut utiliser now() aussi
    "updated_at" timestamptz
   
);
DROP TABLE  "user" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "email" text NOT NULL UNIQUE,
  "password" text NOT NULL,
  "firstname" text NULL,
  "lastname" text NULL,
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

COMMIT;